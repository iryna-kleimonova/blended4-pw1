// –î–∞–Ω–æ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª [1, 2, 3, 4, 5]. –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —â–æ –º—ñ—Å—Ç–∏—Ç—å
// –∫–≤–∞–¥—Ä–∞—Ç–∏ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—É –≤—Ö—ñ–¥–Ω–æ–≥–æ –º–∞—Å–∏–≤—É.
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [1, 4, 9, 16, 25].

// const numbers = [1, 2, 3, 4, 5];

// const newArray = [];

// for (let i = 0; i < numbers.length; i++) {
//   const element = numbers[i] ** 2;
//   newArray.push(element);
// }
// console.log(newArray);

// *********
// const newArray = numbers.map(num => num ** 2);

// console.log(newArray);

//================================================
// –î–∞–Ω–æ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤. –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —â–æ –º—ñ—Å—Ç–∏—Ç—å –≤—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
// –∑ –º–∞—Å–∏–≤—ñ–≤ values –∫–æ–∂–Ω–æ–≥–æ –æ–±'—î–∫—Ç—É, –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –≤ –æ–¥–Ω–æ–º—É –º–∞—Å–∏–≤—ñ.
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [1, 2, 3, 4, 5, 6, 7, 8, 9].

// const data = [
//   { id: 1, values: [1, 2, 3] },
//   { id: 2, values: [4, 5, 6] },
//   { id: 3, values: [7, 8, 9] },
// ];

// const allValues = data.flatMap((value) => value.values);

// console.log(allValues);

//================================================
// –î–∞–Ω–æ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤.
// –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ —î —Ö–æ—á–∞ –± –æ–¥–∏–Ω –æ–±'—î–∫—Ç –∑ –≤—ñ–∫–æ–º –º–µ–Ω—à–µ 20 —Ä–æ–∫—ñ–≤.
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: true.

// const people = [
//   { name: 'John', age: 27 },
//   { name: 'Jane', age: 31 },
//   { name: 'Bob', age: 19 },
// ];

// const ageCheck = people.some((user) => user.age < 20);

// console.log(ageCheck); //true

//================================================
// –î–∞–Ω–æ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª [2, 4, 6, 8, 10].
// –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ —î –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É –ø–∞—Ä–Ω–∏–º. –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: true.

// const numbers = [2, 4, 6, 8, 10];

// const evenCheck = numbers.every((number) => number % 2 === 0);

// console.log(evenCheck); // true

//================================================
// –ó–Ω–∞–π–¥—ñ—Ç—å –ø–µ—Ä—à–µ –Ω–µ–ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ

// const numbers = [2, 1, 6, 8, 9, 10, 12];

// const oddNumber = numbers.find((number) => number % 2 != 0);

// console.log(oddNumber);

//================================================
// –í—ñ–¥—Å–æ—Ä—Ç—É–π—Ç–µ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª [4, 2, 5, 1, 3]
// —É –ø–æ—Ä—è–¥–∫—É –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è. –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [1, 2, 3, 4, 5].

// const numbersArray = [4, 2, 5, 1, 3];

// const sortedArray = numbersArray.sort((a, b) => a - b);

// console.log(sortedArray);

//================================================
// –í—ñ–¥—Å–æ—Ä—Ç—É–π—Ç–µ –º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤ ["banana", "orange", "apple", "pear"]
//  —É –ø–æ—Ä—è–¥–∫—É –∞–ª—Ñ–∞–≤—ñ—Ç—É.
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ["apple", "banana", "orange", "pear"].

// const stringArray = ['banana', 'orange', 'apple', 'pear'];

// console.log(stringArray.sort((a, b) => a.localeCompare(b)));

//================================================
//  –í—ñ–¥—Å–æ—Ä—Ç—É–π—Ç–µ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ –∑–∞ –≤—ñ–∫–æ–º —É –ø–æ—Ä—è–¥–∫—É –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è.
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [{name: "Bob", age: 19}, {name: "John", age: 27}, {name: "Jane", age: 31}].

// const users = [
//   { name: 'John', age: 27 },
//   { name: 'Jane', age: 31 },
//   { name: 'Bob', age: 19 },
// ];

// const sortedObj = users.sort((user1, user2) => user1.age - user2.age);

// console.log(sortedObj);

//================================================
// –î–∞–Ω–æ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤.
// –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —â–æ –º—ñ—Å—Ç–∏—Ç—å —Ç—ñ–ª—å–∫–∏ –æ–±'—î–∫—Ç–∏, –≤ —è–∫–∏—Ö
// –≤—ñ–∫ –±—ñ–ª—å—à–µ 20 —Ä–æ–∫—ñ–≤.
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [{name: "John", age: 27}, {name: "Jane", age: 31}]

// const user = [
//   { name: 'John', age: 27 },
//   { name: 'Jane', age: 31 },
//   { name: 'Bob', age: 19 },
// ];

// const newUser = user.filter((elem) => elem.age > 20);

// console.log(newUser);

//================================================
// –î–∞–Ω–æ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª [1, 2, 3, 4, 5].
// –ó–∞—Å—Ç–æ—Å—É–π—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —Å—É–º–∏ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É.

// const numbers = [1, 2, 3, 4, 5];

// const sum = numbers.reduce((acc, currentValue) => {
//     return acc + currentValue;
//   }, 0);

//   console.log(sum);

//================================================
// –†–æ–∑—Ä–æ–±–∏ –∫–ª–∞—Å Calculator, —è–∫–∏–π –¥–æ–∑–≤–æ–ª—è—î –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–Ω—ñ
//¬† –æ–ø–µ—Ä–∞—Ü—ñ—ó –Ω–∞–¥ —á–∏—Å–ª–æ–º –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—ñ–≤ –∫–ª–∞—Å—É, –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–∏
// –ª–∞–Ω—Ü—é–∂–∫–æ–≤–∏–π –≤–∏–∫–ª–∏–∫ (method chaining).
//
// –í–∏–º–æ–≥–∏ –¥–æ –∫–ª–∞—Å—É Calculator
// - –ú–µ—Ç–æ–¥ number(value)
// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å.
// –ü–æ–≤–µ—Ä—Ç–∞—î —Å–∞–º –æ–±'—î–∫—Ç (this) –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ª–∞–Ω—Ü—é–∂–∫–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤.
// - –º–µ—Ç–æ–¥ getResult, –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—ñ—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π.
// –ù–µ –∑–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è, –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î –π–æ–≥–æ.
// - –º–µ—Ç–æ–¥ add - –î–æ–¥–∞—î value –¥–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è.
// –ü–æ–≤–µ—Ä—Ç–∞—î —Å–∞–º –æ–±'—î–∫—Ç (this) –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ª–∞–Ω—Ü—é–∂–∫–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤.
// - –º–µ—Ç–æ–¥ substruct - –í—ñ–¥–Ω—ñ–º–∞—î value –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è. –ü–æ–≤–µ—Ä—Ç–∞—î this.
// - –º–µ—Ç–æ–¥ divide - –î—ñ–ª–∏—Ç—å –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞ value, —è–∫—â–æ value –Ω–µ –¥–æ—Ä—ñ–≤–Ω—é—î 0.
// –Ø–∫—â–æ value === 0, –≤–∏–∫–∏–¥–∞—î –ø–æ–º–∏–ª–∫—É –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º –ø—Ä–æ –Ω–µ–º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –¥—ñ–ª–µ–Ω–Ω—è.
// –ü–æ–≤–µ—Ä—Ç–∞—î —Å–∞–º –æ–±'—î–∫—Ç (this) –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ª–∞–Ω—Ü—é–∂–∫–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤.
// - –º–µ—Ç–æ–¥ multiply -–ú–Ω–æ–∂–∏—Ç—å –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞ value. –ü–æ–≤–µ—Ä—Ç–∞—î this.
// –û–±'—î–∫—Ç –∫–ª–∞—Å—É –º–æ–∂–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó —É –≤–∏–≥–ª—è–¥—ñ –ª–∞–Ω—Ü—é–∂–∫–∞
// –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
// const calc = new Calculator();

// const result = calc
//¬† ¬†.number(10)¬† ¬†// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è 10
//¬† ¬†.add(5)¬† ¬† ¬† ¬†// –î–æ–¥–∞—î–º–æ 5 (10 + 5 = 15)
//¬† ¬†.subtract(3)¬† // –í—ñ–¥–Ω—ñ–º–∞—î–º–æ 3 (15 - 3 = 12)
//¬† ¬†.multiply(4)¬† // –ú–Ω–æ–∂–∏–º–æ –Ω–∞ 4 (12 * 4 = 48)
//¬† ¬†.divide(2)¬† ¬† // –î—ñ–ª–∏–º–æ –Ω–∞ 2 (48 / 2 = 24)
//¬† ¬†.getResult(); // –û—Ç—Ä–∏–º—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 24

//¬† ¬†console.log(result); // 24

// class Calculator {
//   constructor(value) {
//     this.value = 0;
//   }

//   number(value) {
//     this.value = value;
//     return this;
//   }

//   getResult() {
//     return this.value;
//   }

//   add(value) {
//     this.value += this.value;
//     return this;
//   }

//   substruct(value) {
//     this.value -= value;
//     return this;
//   }

//   divide(value) {
//     if (value === 0) {
//       throw new Error('Division by zero is not allowed!');
//     }
//     this.value /= value;
//     return this;
//   }

//   multiply(value) {
//     this.value *= value;
//     return this;
//   }
// }

// const calc = new Calculator();

// const result = calc
//   .number(10)
//   .add(5)
//   .substruct(3)
//   .multiply(4)
//   .divide(2)
//   .getResult();

// console.log(result); // üëâ 24

//================================================
// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Client —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login email.
// –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏
// —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä —Ç–∞ —Å–µ—Ç—Ç–µ—Ä login email

// class Client {
//   #login;
//   #email;

//   constructor(login, email) {
//     this.#login = login;
//     this.#email = email;
//   }

//   get email() {
//     return this.#email;
//   }

//   set email(newEmail) {
//     this.#email = nemEmail;
//   }

//   get login() {
//     return this.#login;
//   }

//   set login(newLogin) {
//     this.#login = nemLogin;
//   }
// }

//================================================
//  –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è —É –∫–ª–∞—Å–∞—Ö!
// C—Ç–≤–æ—Ä—ñ—Ç—å –∫–ª–∞—Å `Person`, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:
//  - `name` - —ñ–º'—è –ª—é–¥–∏–Ω–∏;
//  - `age`- –≤—ñ–∫ –ª—é–¥–∏–Ω–∏;
//  - `gender` - —Å—Ç–∞—Ç—å –ª—é–¥–∏–Ω–∏;
//  - `email`- –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞ –ª—é–¥–∏–Ω–∏.

// –ö—Ä—ñ–º —Ç–æ–≥–æ, –∫–ª–∞—Å `Person` –º–∞—î –º–∞—Ç–∏ –º–µ—Ç–æ–¥ `getDetails()`,
// —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç –∑ —ñ–º'—è–º, –≤—ñ–∫–æ–º, —Å—Ç–∞—Ç—Ç—é
//—Ç–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—é –ø–æ—à—Ç–æ—é –ª—é–¥–∏–Ω–∏.

//
// –ü–æ—Ç—ñ–º –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–ª–∞—Å `Employee`, —è–∫–∏–π —Ä–æ–∑—à–∏—Ä—é—î –∫–ª–∞—Å `Person` —ñ –º—ñ—Å—Ç–∏—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:
//  - salary - –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞;
//  - department - –≤—ñ–¥–¥—ñ–ª, –≤ —è–∫–æ–º—É –ø—Ä–∞—Ü—é—î —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫.
// –ö—Ä—ñ–º —Ç–æ–≥–æ, –∫–ª–∞—Å `Employee` –º–∞—î –º–∞—Ç–∏ –º–µ—Ç–æ–¥ `getEmployeeDetails()`, —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç –∑ –∑–∞—Ä–ø–ª–∞—Ç–æ—é —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞ —Ç–∞ –≤—ñ–¥–¥—ñ–ª–æ–º, –≤ —è–∫–æ–º—É –≤—ñ–Ω –ø—Ä–∞—Ü—é—î.

// class Person {
//   constructor(name, age, gender, email) {
//     this.name = name;
//     this.age = age;
//     this.gender = gender;
//     this.email = email;
//   }

//   getDetails() {
//     return {
//       name: this.name,
//       age: this.age,
//       gender: this.gender,
//       email: this.email,
//     };
//   }
// }

// class Employee extends Person {
//   constructor(name, age, gender, email, salary, department) {
//     super(name, age, gender, email); // –≤–∏–∫–ª–∏–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –∫–ª–∞—Å—É
//     this.salary = salary;
//     this.department = department;
//   }

//   getEmployeeDetails() {
//     return {
//       salary: this.salary,
//       department: this.department,
//     };
//   }
// }

// // –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
// const employee1 = new Employee(
//   '–û–ª—è',
//   25,
//   'female',
//   'olya@example.com',
//   3000,
//   'HR'
// );

// console.log(employee1.getDetails());
// // { name: '–û–ª—è', age: 25, gender: 'female', email: 'olya@example.com' }

// console.log(employee1.getEmployeeDetails());
// // { salary: 3000, department: 'HR' }
